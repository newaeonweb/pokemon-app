/*
* Entry point of global application style.
* Component-specific style should not go here and be included directly as part of the components.
*/
@use "@angular/material" as mat;

// Theme variables, must be included before the libraries to allow overriding defaults
@import "theme/theme-variables";

// Theme customization
@import "theme/theme";
@import "theme/custom-component-themes.scss";

// 3rd party libraries
@import "~material-design-icons-iconfont/src/material-design-icons";

// Angular Material custom theme
// The mixins below must be included once so we separated them from the variables

// Change typography
$custom-typography: mat.define-typography-config(
  $font-family: "Arvo, monospace",
  $headline: mat.define-typography-level(32px, 48px, 700),
  $body-1: mat.define-typography-level(16px, 24px, 500),
);

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core($custom-typography);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($app-theme);
@include custom-components-theme($app-theme);

.dark-theme {
  @include mat.all-component-themes($app-dark-theme);

  // @include mat-toolbar-theme($app-theme);
}

.container {
  padding: 1rem;
}

.mat-card-header-text {
  margin: 0 16px;
  width: 100%;
}


.page-container {
  margin: 0 auto;
  padding: 16px;
  background-color: rgb(202, 255, 230);
}

.header {
  margin: 0 auto;
  text-align: center;
  border-bottom: 1px solid rgb(0, 160, 152);
  margin-bottom: 10px;
}

.header h1 {
  margin-bottom: -10px;
}
header p {
  color: rgb(0, 128, 121);
}

html,
body {
  font-family: Roboto, Arial, sans-serif;
  margin: 0;
  height: 100%;
}

.flex-container {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: space-around;
  align-content: center;
  align-items: flex-start;
}

.flex-item {
  flex: 0 0 auto;
  align-self: flex-start;
}
